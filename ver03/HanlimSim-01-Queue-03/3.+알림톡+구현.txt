
3. 알림톡 구현

1. 알림톡 라이브러리

gradle

	implementation 'skt.tmall.talk:11stpushtalkapi:1.3.8'

maven

	<dependency>

	    <groupId>skt.tmall.talk</groupId>

	    <artifactId>11stpushtalkapi</artifactId>

	    <version>1.3.8</version>

	</dependency>

Jar 다운로드

	http://nexus.11stcorp.com:8081/nexus/repository/releases/skt/tmall/talk/11stpushtalkapi/1.3.8/11stpushtalkapi-1.3.8.jar


2. 알림톡 구현

알림톡 구현

//기본정보

String talkMsgTmpltNo = "900";                 // 개인화 메시지 타입코드 900

Long memNo = 10000276L;                        //회원번호

AppKdCdType appKdCd = AppKdCdType.ELEVENSTAPP; // 발송대상 앱코드



//푸시메시지

JsonObject andTopJsonObj = new JsonObject();

andTopJsonObj.addProperty("AND_TOP_MSG", "안드로이드 상단 메시지");





JsonObject andBtmJsonObj = new JsonObject();

andBtmJsonObj.addProperty("AND_BTM_MSG", "안드로이드 하단 메시지");





JsonObject iosJsonObj = new JsonObject();

iosJsonObj.addProperty("IOS_MSG", "아이폰 메시지");







//메시지 셋팅

PushTalkParameter data = new PushTalkParameter(talkMsgTmpltNo, memNo);  //   템플릿 번호와 회원번호 셋팅

data.setAppKdCd(appKdCd);                                               //   대상앱 지정

data.setPushTopMessage(andTopJsonObj.toString());                       //   안드로이드 상단메시지 JSON데이터

data.setPushBottomMessage(andBtmJsonObj.toString());                    //   안드로이드 하단메시지 JSON데이터

data.setPushIosMessage(iosJsonObj.toString());                          //   아이폰 메시지 JSON데이터

data.setTalkDispYn("N");                                                //   알림-혜택톡방 사용안함. 일반 푸시발송시 사용

data.setDetailUrl("http://m.11st.co.kr/MW/TData/dataFree.tmall");       //   일반푸시 사용시- 클릭URL

data.setBannerUrl("이미지URL");                                           //   푸시배너이미지. 없을경우 생략가능

data.setMsgGrpNo(1235L);                                                //   메시지 식별 그룹번호. 없을경우 생략가능

data.setSendAllwBgnDt(new Date());                                      //   예약발송을 할경우 셋팅. 없을경우 생략가능



//SMS 사용시

data.setSms("json data")    //  https://wiki.11stcorp.com/pages/viewpage.action?pageId=214088691



// Request Body 확인시

// System.out.println(new GsonBuilder().serializeNulls().create().toJson(Arrays.asList(data)));

PushTalkSendService.INSTANCE.remoteSyncPush(Lists.newArrayList(data));


 ------------------------------------------------------------------

 SAS가 호출할때, json 항목 리스트 정보 입니다.

campaigncode             $20
treatmentcode            $20
AppKdCd                  $2
MsgTypCd                 $2
Memno                    $10
MessageData              $2000
AlimiData                $2000
TalkTitle                $100
TalkDispYn               $10
TalkMsgTmpltNo           $50
Android_TopmessageData   $1000
Android_BtmmessageData   $1000
Ios_messageData          $2000
BannerUrl                $1000
DetailUrl                $1000
EtcData                  $100
BlockTopCapMain_Value    $500
BlockTopCapSub_Value     $100
BlockBoldTextMain_Value  $500
BlockBoldTextSub_Value   $500
BlockImg500_Value        $2000
BlockBtnView_Value       $100
BlockLinkUrlMobile_Value $500
BlockLinkUrlWeb_Value    $500
request_dt               $20
return_code              $500

>숫자 앞에 $ 표시는 해당 항목이 문자형을 의미합니다.
-요청할 때 해당 항목에 값이 없을 경우 NULL 또는 '' 형태로 호출 됩니다.

 ------------------------------------------------------------------
 /**
 * SAS-JAVA Wrapper Class
 *  * 2022.2.4
 */

/**
 * @author
 *
 */

import com.google.common.collect.Lists;
import com.google.gson.Gson;
//import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import com.google.gson.reflect.TypeToken;
import java.io.PrintStream;
//import java.util.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
//
import skt.tmall.talk.dto.PushTalkParameter;
//import skt.tmall.talk.dto.type.*;
import skt.tmall.talk.dto.type.AppKdCdType;
import skt.tmall.talk.dto.type.Block;
import skt.tmall.talk.dto.type.BlockBoldText;
//import skt.tmall.talk.dto.type.BlockBoldText.Value;
import skt.tmall.talk.dto.type.BlockBtnView;
//import skt.tmall.talk.dto.type.BlockBtnView.Value;
import skt.tmall.talk.dto.type.BlockImg500;
//import skt.tmall.talk.dto.type.BlockImg500.Value;
import skt.tmall.talk.dto.type.BlockLinkUrl;
import skt.tmall.talk.dto.type.BlockTopCap;
//import skt.tmall.talk.dto.type.BlockTopCap.Value;

import skt.tmall.talk.service.PushTalkSendService;
//import static skt.tmall.talk.dto.type.AppKdCdType.ELEVENSTAPP;

public class SendtalkMsg {

	private AppKdCdType appKdCd = AppKdCdType.ELEVENSTAPP;

	private String android_TopmessageData = "안드로이드 메시지~~Top개인화테스트~69번째(포맷변경)";
	private String android_BtmmessageData = "안드로이드 메시지~~Btm개인화테스트~69번째(포맷변경)";
	private String ios_messageData = "아이폰 메시지~개인화테스트입니다~69번째(포맷유지)";
	private String detailUrl = "http://m.11st.co.kr/MW/TData/dataFree.tmall";

	private String bannerUrl = "http://m.11st.co.kr";

	private String memNo = "20750578";
	private String talkDispYn = "Y";
	private String talkMsgTmpltNo = "001";
	private String talkTitle = "주문 알림톡입니다.(69)";
	private String BlockTopCapMain_Value = "패션워크";
	private String BlockTopCapSub_Value = "광고";
	private String BlockBoldTextMain_Value = "반값 타임딜 하루 69번 오픈";
	private String BlockBoldTextSub_Value = "놓치지마세요!";

	private String BlockImg500_Value = "{ \"imgUrl\" : [\"http://i.011st.com/ui_img/11talk/img_500_500_sample2.png\" ,\"http://i.011st.com/ui_img/11talk/img_500_500_sample1.png\n\n\"  ]}";

	private String BlockBtnView_Value = "상세보기(69)";

	private String BlockLinkUrlMobile_Value = "http://m.11st.co.kr/MW/MyPage/V1/benefitCouponDownList.tmall";
	private String BlockLinkUrlWeb_Value = "http://11st.co.kr";
	private String etcData = "{ \"campaigncode\":\"CAMP00000\", \"treatmentcode\":\"TR00000\" }";

//  private AppKdCdType appKdCd = ELEVENSTAPP; // 발송대상 앱코드

	Gson gson = new Gson();
	Map<String, Object> map = null;
	List<String> lstUrls = null;
	List<BlockImg500.Value> lists = null;
	List<Block> composites = null;

	public String getMemno() {
		return this.memNo;
	}

	public void setMemno(String memno) {
		this.memNo = memno;
	}

	public String getTalkDispYn()
	{
		return this.talkDispYn;
	}

	public void setTalkDispYn(String talkDispYn) {
		this.talkDispYn = talkDispYn;
	}

	public String getTalkMsgTmpltNo()
	{
		return this.talkMsgTmpltNo;
	}

	public void setTalkMsgTmpltNo(String talkMsgTmpltNo) {
		this.talkMsgTmpltNo = talkMsgTmpltNo;
	}

	public String getAndroid_TopmessageData() {
		return this.android_TopmessageData;
	}

	public void setAndroid_TopmessageData(String android_messageData) {
		this.android_TopmessageData = android_messageData;
	}

	public String getAndroid_BtmmessageData() {
		return this.android_BtmmessageData;
	}

	public void setAndroid_BtmmessageData(String android_messageData) {
		this.android_BtmmessageData = android_messageData;
	}

	public String getIos_messageData() {
		return this.ios_messageData;
	}

	public void setIos_messageData(String ios_messageData) {
		this.ios_messageData = ios_messageData;
	}

	public String getDetailUrl() {
		return this.detailUrl;
	}

	public void setDetailUrl(String detailUrl) {
		this.detailUrl = detailUrl;
	}

	public String getBannerUrl() {
		return this.bannerUrl;
	}

	public void setBannerUrl(String bannerUrl) {
		this.bannerUrl = bannerUrl;
	}

	public String getTalkTitle() {
		return this.talkTitle;
	}

	public void setTalkTitle(String talkTitle) {
		this.talkTitle = talkTitle;
	}

	public String getBlockTopCapMain_Value() {
		return this.BlockTopCapMain_Value;
	}

	public void setBlockTopCapMain_Value(String BlockTopCapMain_Value) {
		this.BlockTopCapMain_Value = BlockTopCapMain_Value;
	}

	public String getBlockTopCapSub_Value() {
		return this.BlockTopCapSub_Value;
	}

	public void setBlockTopCapSub_Value(String BlockTopCapSub_Value) {
		this.BlockTopCapSub_Value = BlockTopCapSub_Value;
	}

	public String getBlockBoldTextMain_Value() {
		return this.BlockBoldTextMain_Value;
	}

	public void setBlockBoldTextMain_Value(String BlockBoldTextMain_Value) {
		this.BlockBoldTextMain_Value = BlockBoldTextMain_Value;
	}

	public String getBlockBoldTextSub_Value() {
		return this.BlockBoldTextSub_Value;
	}

	public void setBlockBoldTextSub_Value(String BlockBoldTextSub_Value) {
		this.BlockBoldTextSub_Value = BlockBoldTextSub_Value;
	}

	public String getBlockImg500_Value() {
		return this.BlockImg500_Value;
	}

	public void setBlockImg500_Value(String BlockImg500_Value) {
		this.BlockImg500_Value = BlockImg500_Value;
	}

	public String getBlockBtnView_Value() {
		return this.BlockBtnView_Value;
	}

	public void setBlockBtnView_Value(String BlockBtnView_Value) {
		this.BlockBtnView_Value = BlockBtnView_Value;
	}

	public String getBlockLinkUrlMobile_Value() {
		return this.BlockLinkUrlMobile_Value;
	}

	public void setBlockLinkUrlMobile_Value(String BlockLinkUrlMobile_Value) {
		this.BlockLinkUrlMobile_Value = BlockLinkUrlMobile_Value;
	}

	public String getBlockLinkUrlWeb_Value() {
		return this.BlockLinkUrlWeb_Value;
	}

	public void setBlockLinkUrlWeb_Value(String BlockLinkUrlWeb_Value) {
		this.BlockLinkUrlWeb_Value = BlockLinkUrlWeb_Value;
	}

	public String getEtcData() {
		return this.etcData;
	}

	public void setEtcData(String etcData) {
		this.etcData = etcData;
	}

//	public String getMemno() {
//		return memNo;
//	}

//	public void setMemno(String memno) {
//		this.memNo = memno;
//	}

	public SendtalkMsg() {}

	public int exec() throws Exception {
		System.setProperty("server.type", "real");
		//푸시메시지

		JsonObject obj = new JsonObject();
		obj.addProperty("IOS_MSG", ios_messageData);
		obj.addProperty("AND_TOP_MSG", android_TopmessageData);
		obj.addProperty("AND_BTM_MSG", android_BtmmessageData);

		map = gson.fromJson(BlockImg500_Value, new TypeToken<Map<String, Object>>(){}.getType());  // important

		lstUrls = (List<String>) map.get("imgUrl");  // important
		//String strUrl;
//	for (String strUrl : lstUrls) {
//
//		}
		lists = new ArrayList<>();  // important
		for (String strUrl : lstUrls) {
			lists.add(new BlockImg500.Value(strUrl));	// important
		}


		//알림톡메시지
		String summary = this.talkTitle; //알림톡방 리스트에 노출 할 메시지

		List<Block> composites = Lists.newArrayList(
				new BlockTopCap(new BlockTopCap.Value(BlockTopCapMain_Value , BlockTopCapSub_Value))
				, new BlockBoldText(new BlockBoldText.Value(BlockBoldTextMain_Value , BlockBoldTextSub_Value))
				, new BlockImg500(Lists.newArrayList( lists ))
				, new BlockBtnView(new BlockBtnView.Value(BlockBtnView_Value
						, new BlockLinkUrl(BlockLinkUrlMobile_Value , BlockLinkUrlWeb_Value)
						// new BlockLinkUrl("http://m.11st.co.kr/MW/Product/productBasicInfo.tmall?prdNo=2147806088&detailViewType=webviewReady", "http://11st.co.kr")

				))
		);

		//etcData (캠페인 정보 추가 )
		Gson gson = new Gson();
		//HashMap<String,String> mapEtcData = gson.fromJson(etcData, new TypeToken<Map<String, String>>() {}.getType());
		HashMap<String,String> mapEtcData = gson.fromJson(etcData, HashMap.class);

		//메시지 셋팅
		PushTalkParameter data = new PushTalkParameter(talkMsgTmpltNo , Long.valueOf(memNo));
		data.setAppKdCd(appKdCd);
		data.setPushTopMessage(obj.toString());
		data.setPushBottomMessage(obj.toString());
		data.setPushIosMessage(obj.toString());
		data.setTalkDispYn("Y");			// 고정 처리 (Y) 알림-혜택톡방 동시 사용함
		data.setDetailUrl(detailUrl);	   //   일반푸시 사용시- 클릭URL
		data.setBannerUrl(bannerUrl);	   //   푸시배너이미지. 없을경우 생략가능
		//data.setMsgGrpNo(1235L);		  //   메시지 식별 그룹번호. 없을경우 생략가능
		data.setEtcData(mapEtcData);

		data.setTalkSummaryMessage(summary);
		data.setTalkMessage(composites);
		System.out.println(">>>>> composites: " + composites);
		System.out.println(">>>>> obj: " + obj);

		//예약발송
		//data.setSendAllwBgnDt(new Date()); //예약발송시 설정.  예약발송시간을 java.util.Date 타입으로 작성.

		//SMS 셋팅 http://wiki.11stcorp.com/pages/viewpage.action?pageId=214088691
		//data.setSmsMsg("SMS 스펙에 해당하는 데이터 작성");
		//테스트 데이터 셋팅  , 운영모드 일 경우 Remarking

		// Request Body 확인시
		// System.out.println(">>>>> Request Body:" + new GsonBuilder().serializeNulls().create().toJson(Arrays.asList(data)));

		//알림톡 전송
		int ret = PushTalkSendService.INSTANCE.remoteSyncPush(Lists.newArrayList(data));
		return ret;
	}

	public static void main(String[] arg) throws Exception {
		//	 SendtalkMsgMainalkMsg sendtalkMsg SendtalkMsgMainalkMsg();
		SendtalkMsg instance = new SendtalkMsg();

		//camp1
		//json1.txt (100)






		//테스트 데이터 셋팅  , 운영모드 일 경우 Remarking
		// instance.setAndroid_messageData("안드로이드 메시지~~개인화테스트입니다~45번째(포맷변경)");
		instance.setIos_messageData	("아이폰 메시지~개인화테스트입니다~45번째(포맷유지)");
		instance.setTalkMsgTmpltNo	 ("001");
		instance.setMemno			  ("18468196"); //42751905 18468196 20750578

		int ret = instance.exec();
		System.out.println(">>>>> ret = " + ret);

	}
}

----------------------------------------------------------------------------
>>>>> Request Body: [
  {
    "talkVersion": "1.3.8",
    "talkMsgTmpltNo": "001",
    "appKdCd": "01",
    "memNo": 18468196,
    "pushTopMessage": "{\"IOS_MSG\":\"아이폰 메시지~개인화테스트입니다~69번째(포맷유지)\",\"AND_TOP_MSG\":\"안드로이드 메시지~~Top개인화테스트~69번째(포맷변경)\",\"AND_BTM_MSG\":\"안드로이드 메시지~~Btm개인화테스트~69번째(포맷변경)\"}",
    "pushBottomMessage": "{\"IOS_MSG\":\"아이폰 메시지~개인화테스트입니다~69번째(포맷유지)\",\"AND_TOP_MSG\":\"안드로이드 메시지~~Top개인화테스트~69번째(포맷변경)\",\"AND_BTM_MSG\":\"안드로이드 메시지~~Btm개인화테스트~69번째(포맷변경)\"}",
    "pushIosMessage": "{\"IOS_MSG\":\"아이폰 메시지~개인화테스트입니다~69번째(포맷유지)\",\"AND_TOP_MSG\":\"안드로이드 메시지~~Top개인화테스트~69번째(포맷변경)\",\"AND_BTM_MSG\":\"안드로이드 메시지~~Btm개인화테스트~69번째(포맷변경)\"}",
    "talkSummaryMessage": "주문 알림톡입니다.(69)",
    "talkMessage": [
      {
        "id": "Block_Top_Cap",
        "payload": {
          "text1": "패션워크",
          "sub_text1": "광고"
        }
      },
      {
        "id": "Block_Bold_Text",
        "payload": {
          "text1": "반값 타임딜 하루 69번 오픈",
          "sub_text1": "놓치지마세요!"
        }
      },
      {
        "id": "Block_Img_500",
        "payload": [
          {
            "imgUrl1": "http://i.011st.com/ui_img/11talk/img_500_500_sample2.png"
          },
          {
            "imgUrl1": "http://i.011st.com/ui_img/11talk/img_500_500_sample1.png\n\n"
          }
        ]
      },
      {
        "id": "Block_Btn_View",
        "payload": {
          "text1": "상세보기(69)",
          "linkUrl1": {
            "mobile": "http://m.11st.co.kr/MW/MyPage/V1/benefitCouponDownList.tmall",
            "web": "http://11st.co.kr"
          }
        }
      }
    ],
    "talkDispYn": "Y",
    "detailUrl": "http://m.11st.co.kr/MW/TData/dataFree.tmall",
    "bannerUrl": "http://m.11st.co.kr",
    "etcData": {
      "campaigncode": "CAMP00000",
      "treatmentcode": "TR00000"
    }
  }
]
>>>>> ret = -1

----------------------------------------------------------------------------
{
	"campaigncode":"CAMP00000",
	"treatmentcode":"TR00000",
	"AppKdCd":"01",
	"MsgTypCd":"",
	"Memno":"20750578",
	"MessageData":"",
	"AlimiData":"",
	"TalkTitle":"주문 알림톡입니다.(69)",      
	"TalkDispYn":"Y",      
	"TalkMsgTmpltNo":"001",      
	"Android_TopmessageData":"안드로이드 메시지~~Top개인화테스트~69번째(포맷변경)",     
	"Android_BtmmessageData":"안드로이드 메시지~~Btm개인화테스트~69번째(포맷변경)",
	"Ios_messageData":"아이폰 메시지~개인화테스트입니다~69번째(포맷유지)",
	"BannerUrl":"http://m.11st.co.kr",
	"DetailUrl":"http://m.11st.co.kr/MW/TData/dataFree.tmall",
	"EtcData":"{ \"campaigncode\":\"CAMP00000\", \"treatmentcode\":\"TR00000\" }",
	"BlockTopCapMain_Value":"패션워크",
	"BlockTopCapSub_Value":"광고",
	"BlockBoldTextMain_Value":"반값 타임딜 하루 69번 오픈",
	"BlockBoldTextSub_Value":"놓치지마세요!",
	"BlockImg500_Value":"{ \"imgUrl\" : [\"http://i.011st.com/ui_img/11talk/img_500_500_sample2.png\" ,\"http://i.011st.com/ui_img/11talk/img_500_500_sample1.png\n\n\"  ]}",
	"BlockBtnView_Value":"상세보기(69)",
	"BlockLinkUrlMobile_Value":"http://m.11st.co.kr/MW/MyPage/V1/benefitCouponDownList.tmall",
	"BlockLinkUrlWeb_Value":"http://11st.co.kr",
	"request_dt":"",
	"return_code":"",
}